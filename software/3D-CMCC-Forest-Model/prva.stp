#!/usr/bin/env stap

    global read, write, start

    probe begin {
        start = gettimeofday_s()
    }
    probe syscall.write {
        write += count
    }

    probe timer.ms(1000) {
        printf("%d\t%d\t%d\n", (gettimeofday_s()-start), read, write)
        read=0
        write=0
    }
probe timer
{
	/*
	 * available variables on this probe:
	 * timer.jiffies(N), timer.jiffies(N).randomize(M), timer.ms(N), timer.ms(N).randomize(M), timer.profile, timer.profile
	 */

}

probe vm
{
	/*
	 * available variables on this probe:
	 * vm.kfree, vm.kmalloc, vm.kmalloc_node, vm.kmem_cache_alloc, vm.kmem_cache_alloc_node, vm.kmem_cache_free
	 */

}

probe kernel
{
	/*
	 * available variables on this probe:
	 * kernel.function("PATTERN"), kernel.function("PATTERN").call, kernel.function("PATTERN").inline, kernel.function("PATTERN").label("LPATTERN"), kernel.function("PATTERN").return, kernel.function("PATTERN").return.maxactive(VALUE), kernel.mark("MARK"), kernel.mark("MARK").format("FORMAT"), kernel.statement("PATTERN"), kernel.statement(ADDRESS).absolute
	 */

}

probe ioscheduler
{
	/*
	 * available variables on this probe:
	 * ioscheduler.elv_add_request, ioscheduler.elv_add_request.tp
	 */

}
